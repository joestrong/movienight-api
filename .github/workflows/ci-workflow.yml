name: Deploy
# This workflow is triggered on pushes to the repository.
on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache composer dependancies
        uses: actions/cache@v1
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
      - run: composer validate
      - run: composer install --prefer-dist --no-progress --no-suggest
      - run: docker-compose -f docker-compose.build.yml build
      - run: docker push docker.joestrong.co.uk/movienight-app:latest
  deploy:
    name: Deploy to K8
    needs: build
    runs-on: ubuntu-latest
    env:
      KUBERNETES_CLUSTER: ${{ secrets.KUBERNETES_CLUSTER }}
      KUBERNETES_CLUSTER_CERTIFICATE: ${{ secrets.KUBERNETES_CLUSTER_CERTIFICATE }}
      KUBERNETES_SERVER: ${{ secrets.KUBERNETES_SERVER }}
      KUBERNETES_TOKEN: ${{ secrets.KUBERNETES_TOKEN }}
    steps:
      - uses: actions/checkout@v1
      - run: echo -n "$KUBERNETES_CLUSTER_CERTIFICATE" | base64 -d > ca.cert
      - run: kubectl config set-cluster $KUBERNETES_CLUSTER --server=$KUBERNETES_SERVER --certificate-authority=ca.cert
      - run: kubectl config set-context my-context --cluster=$KUBERNETES_CLUSTER
      - run: kubectl config use-context my-context
      - run: kubectl apply --token=$KUBERNETES_TOKEN -f k8/deployment.yml
      - run: kubectl apply --token=$KUBERNETES_TOKEN -f k8/service.yml
